/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from 'ionic-angular/components/refresher/refresher-content';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from 'ionic-angular/components/refresher/refresher';
import * as import9 from 'ionic-angular/config/config';
import * as import10 from '@angular/core/src/metadata/view';
import * as import11 from '@angular/core/src/linker/component_factory';
import * as import12 from '@angular/common/src/directives/ng_if';
import * as import13 from 'ionic-angular/components/spinner/spinner';
import * as import14 from '@angular/core/src/linker/template_ref';
import * as import15 from '../spinner/spinner.ngfactory';
import * as import16 from '@angular/core/src/linker/element_ref';
import * as import17 from 'ionic-angular/components/icon/icon';
import * as import18 from '@angular/core/src/security';
var renderType_RefresherContent_Host = null;
var _View_RefresherContent_Host0 = (function (_super) {
    __extends(_View_RefresherContent_Host0, _super);
    function _View_RefresherContent_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_RefresherContent_Host0, renderType_RefresherContent_Host, import6.ViewType.HOST, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_RefresherContent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('ion-refresher-content', rootSelector, null);
        this._appEl_0 = new import2.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_RefresherContent0(this.viewUtils, this.injector(0), this._appEl_0);
        this._RefresherContent_0_4 = new import3.RefresherContent(this.parentInjector.get(import8.Refresher), this.parentInjector.get(import9.Config));
        this._appEl_0.initComponent(this._RefresherContent_0_4, [], compView_0);
        compView_0.create(this._RefresherContent_0_4, this.projectableNodes, null);
        this._expr_0 = import7.UNINITIALIZED;
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_RefresherContent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import3.RefresherContent) && (0 === requestNodeIndex))) {
            return this._RefresherContent_0_4;
        }
        return notFoundResult;
    };
    _View_RefresherContent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        if (((this.numberOfChecks === 0) && !throwOnChange)) {
            this._RefresherContent_0_4.ngOnInit();
        }
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_0 = this._RefresherContent_0_4.r.state;
        if (import4.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this.renderer.setElementAttribute(this._el_0, 'state', ((currVal_0 == null) ? null : currVal_0.toString()));
            this._expr_0 = currVal_0;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_RefresherContent_Host0;
}(import1.AppView));
function viewFactory_RefresherContent_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_RefresherContent_Host === null)) {
        (renderType_RefresherContent_Host = viewUtils.createRenderComponentType('', 0, import10.ViewEncapsulation.None, [], {}));
    }
    return new _View_RefresherContent_Host0(viewUtils, parentInjector, declarationEl);
}
export var RefresherContentNgFactory = new import11.ComponentFactory('ion-refresher-content', viewFactory_RefresherContent_Host0, import3.RefresherContent);
var styles_RefresherContent = [];
var renderType_RefresherContent = null;
var _View_RefresherContent0 = (function (_super) {
    __extends(_View_RefresherContent0, _super);
    function _View_RefresherContent0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_RefresherContent0, renderType_RefresherContent, import6.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_RefresherContent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._el_0 = this.renderer.createElement(parentRenderNode, 'div', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'refresher-pulling');
        this._anchor_1 = this.renderer.createTemplateAnchor(this._el_0, null);
        this._appEl_1 = new import2.AppElement(1, 0, this, this._anchor_1);
        this._TemplateRef_1_5 = new import14.TemplateRef_(this._appEl_1, viewFactory_RefresherContent1);
        this._NgIf_1_6 = new import12.NgIf(this._appEl_1.vcRef, this._TemplateRef_1_5);
        this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0, null);
        this._appEl_2 = new import2.AppElement(2, 0, this, this._anchor_2);
        this._TemplateRef_2_5 = new import14.TemplateRef_(this._appEl_2, viewFactory_RefresherContent2);
        this._NgIf_2_6 = new import12.NgIf(this._appEl_2.vcRef, this._TemplateRef_2_5);
        this._el_3 = this.renderer.createElement(parentRenderNode, 'div', null);
        this.renderer.setElementAttribute(this._el_3, 'class', 'refresher-refreshing');
        this._el_4 = this.renderer.createElement(this._el_3, 'div', null);
        this.renderer.setElementAttribute(this._el_4, 'class', 'refresher-refreshing-icon');
        this._el_5 = this.renderer.createElement(this._el_4, 'ion-spinner', null);
        this._appEl_5 = new import2.AppElement(5, 4, this, this._el_5);
        var compView_5 = import15.viewFactory_Spinner0(this.viewUtils, this.injector(5), this._appEl_5);
        this._Spinner_5_4 = new import13.Spinner(this.parentInjector.get(import9.Config), new import16.ElementRef(this._el_5), this.renderer);
        this._appEl_5.initComponent(this._Spinner_5_4, [], compView_5);
        compView_5.create(this._Spinner_5_4, [], null);
        this._anchor_6 = this.renderer.createTemplateAnchor(this._el_3, null);
        this._appEl_6 = new import2.AppElement(6, 3, this, this._anchor_6);
        this._TemplateRef_6_5 = new import14.TemplateRef_(this._appEl_6, viewFactory_RefresherContent3);
        this._NgIf_6_6 = new import12.NgIf(this._appEl_6.vcRef, this._TemplateRef_6_5);
        this._expr_0 = import7.UNINITIALIZED;
        this._expr_1 = import7.UNINITIALIZED;
        this._expr_2 = import7.UNINITIALIZED;
        this._expr_3 = import7.UNINITIALIZED;
        this._expr_4 = import7.UNINITIALIZED;
        this.init([], [
            this._el_0,
            this._anchor_1,
            this._anchor_2,
            this._el_3,
            this._el_4,
            this._el_5,
            this._anchor_6
        ], [], []);
        return null;
    };
    _View_RefresherContent0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import14.TemplateRef) && (1 === requestNodeIndex))) {
            return this._TemplateRef_1_5;
        }
        if (((token === import12.NgIf) && (1 === requestNodeIndex))) {
            return this._NgIf_1_6;
        }
        if (((token === import14.TemplateRef) && (2 === requestNodeIndex))) {
            return this._TemplateRef_2_5;
        }
        if (((token === import12.NgIf) && (2 === requestNodeIndex))) {
            return this._NgIf_2_6;
        }
        if (((token === import13.Spinner) && (5 === requestNodeIndex))) {
            return this._Spinner_5_4;
        }
        if (((token === import14.TemplateRef) && (6 === requestNodeIndex))) {
            return this._TemplateRef_6_5;
        }
        if (((token === import12.NgIf) && (6 === requestNodeIndex))) {
            return this._NgIf_6_6;
        }
        return notFoundResult;
    };
    _View_RefresherContent0.prototype.detectChangesInternal = function (throwOnChange) {
        var changed = true;
        var currVal_0 = this.context.pullingIcon;
        if (import4.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this._NgIf_1_6.ngIf = currVal_0;
            this._expr_0 = currVal_0;
        }
        var currVal_1 = this.context.pullingText;
        if (import4.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this._NgIf_2_6.ngIf = currVal_1;
            this._expr_1 = currVal_1;
        }
        changed = false;
        var currVal_2 = this.context.refreshingSpinner;
        if (import4.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this._Spinner_5_4.name = currVal_2;
            changed = true;
            this._expr_2 = currVal_2;
        }
        if (changed) {
            this._appEl_5.componentView.markAsCheckOnce();
        }
        if (((this.numberOfChecks === 0) && !throwOnChange)) {
            this._Spinner_5_4.ngOnInit();
        }
        var currVal_4 = this.context.refreshingText;
        if (import4.checkBinding(throwOnChange, this._expr_4, currVal_4)) {
            this._NgIf_6_6.ngIf = currVal_4;
            this._expr_4 = currVal_4;
        }
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_3 = this._Spinner_5_4.paused;
        if (import4.checkBinding(throwOnChange, this._expr_3, currVal_3)) {
            this.renderer.setElementClass(this._el_5, 'spinner-paused', currVal_3);
            this._expr_3 = currVal_3;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_RefresherContent0;
}(import1.AppView));
export function viewFactory_RefresherContent0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_RefresherContent === null)) {
        (renderType_RefresherContent = viewUtils.createRenderComponentType('/home/nicolas/projects/cloudtripper/cloudtripper-frontend/node_modules/ionic-angular/components/refresher/refresher-content.d.ts class RefresherContent - inline template', 0, import10.ViewEncapsulation.None, styles_RefresherContent, {}));
    }
    return new _View_RefresherContent0(viewUtils, parentInjector, declarationEl);
}
var _View_RefresherContent1 = (function (_super) {
    __extends(_View_RefresherContent1, _super);
    function _View_RefresherContent1(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_RefresherContent1, renderType_RefresherContent, import6.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_RefresherContent1.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'div', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'refresher-pulling-icon');
        this._el_1 = this.renderer.createElement(this._el_0, 'ion-icon', null);
        this.renderer.setElementAttribute(this._el_1, 'role', 'img');
        this._Icon_1_3 = new import17.Icon(this.parent.parentInjector.get(import9.Config), new import16.ElementRef(this._el_1), this.renderer);
        this._expr_0 = import7.UNINITIALIZED;
        this._expr_1 = import7.UNINITIALIZED;
        this.init([].concat([this._el_0]), [
            this._el_0,
            this._el_1
        ], [], []);
        return null;
    };
    _View_RefresherContent1.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import17.Icon) && (1 === requestNodeIndex))) {
            return this._Icon_1_3;
        }
        return notFoundResult;
    };
    _View_RefresherContent1.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0 = this.parent.context.pullingIcon;
        if (import4.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this._Icon_1_3.name = currVal_0;
            this._expr_0 = currVal_0;
        }
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_1 = this._Icon_1_3._hidden;
        if (import4.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this.renderer.setElementClass(this._el_1, 'hide', currVal_1);
            this._expr_1 = currVal_1;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_RefresherContent1.prototype.destroyInternal = function () {
        this._Icon_1_3.ngOnDestroy();
    };
    return _View_RefresherContent1;
}(import1.AppView));
function viewFactory_RefresherContent1(viewUtils, parentInjector, declarationEl) {
    return new _View_RefresherContent1(viewUtils, parentInjector, declarationEl);
}
var _View_RefresherContent2 = (function (_super) {
    __extends(_View_RefresherContent2, _super);
    function _View_RefresherContent2(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_RefresherContent2, renderType_RefresherContent, import6.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_RefresherContent2.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'div', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'refresher-pulling-text');
        this._expr_0 = import7.UNINITIALIZED;
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return null;
    };
    _View_RefresherContent2.prototype.detectChangesInternal = function (throwOnChange) {
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_0 = this.parent.context.pullingText;
        if (import4.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this.renderer.setElementProperty(this._el_0, 'innerHTML', this.viewUtils.sanitizer.sanitize(import18.SecurityContext.HTML, currVal_0));
            this._expr_0 = currVal_0;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_RefresherContent2;
}(import1.AppView));
function viewFactory_RefresherContent2(viewUtils, parentInjector, declarationEl) {
    return new _View_RefresherContent2(viewUtils, parentInjector, declarationEl);
}
var _View_RefresherContent3 = (function (_super) {
    __extends(_View_RefresherContent3, _super);
    function _View_RefresherContent3(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_RefresherContent3, renderType_RefresherContent, import6.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_RefresherContent3.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'div', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'refresher-refreshing-text');
        this._expr_0 = import7.UNINITIALIZED;
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return null;
    };
    _View_RefresherContent3.prototype.detectChangesInternal = function (throwOnChange) {
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_0 = this.parent.context.refreshingText;
        if (import4.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this.renderer.setElementProperty(this._el_0, 'innerHTML', this.viewUtils.sanitizer.sanitize(import18.SecurityContext.HTML, currVal_0));
            this._expr_0 = currVal_0;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_RefresherContent3;
}(import1.AppView));
function viewFactory_RefresherContent3(viewUtils, parentInjector, declarationEl) {
    return new _View_RefresherContent3(viewUtils, parentInjector, declarationEl);
}
